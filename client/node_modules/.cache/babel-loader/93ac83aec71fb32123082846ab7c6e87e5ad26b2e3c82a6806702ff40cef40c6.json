{"ast":null,"code":"var _jsxFileName = \"/home/kushal/Desktop/College_Stuff/Psychology/Journal-Sentiment-Analysis/client/src/Components/Plot.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Plot() {\n  _s();\n  const [base, setBase] = useState();\n  const [windowSize1, setWindowSize1] = useState(3); // Default window size 1\n  const [windowSize2, setWindowSize2] = useState(5); // Default window size 2\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate(); // Initialize navigate hook\n\n  const fetchImg = async (size1, size2) => {\n    setLoading(true);\n    const url = `http://127.0.0.1:5000/plot?window_size1=${size1}&window_size2=${size2}`;\n    try {\n      let result = await fetch(url);\n      result = await result.json();\n      setBase(result.img);\n    } catch (error) {\n      console.error(\"Error fetching plot:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch the plot when the component mounts with default window sizes\n  useEffect(() => {\n    fetchImg(windowSize1, windowSize2);\n  }, [windowSize1, windowSize2]);\n\n  // Handle input changes\n  const handleInputChange1 = event => {\n    setWindowSize1(event.target.value);\n  };\n  const handleInputChange2 = event => {\n    setWindowSize2(event.target.value);\n  };\n\n  // Handle form submission\n  const handleSubmit = event => {\n    event.preventDefault();\n    fetchImg(windowSize1, windowSize2);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      height: \"100vh\",\n      flexDirection: \"column\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"window_size1\",\n        children: \"Enter Moving Average Window Size 1:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"window_size1\",\n        name: \"window_size1\",\n        min: \"1\",\n        value: windowSize1,\n        onChange: handleInputChange1,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"window_size2\",\n        children: \"Enter Moving Average Window Size 2:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        id: \"window_size2\",\n        name: \"window_size2\",\n        min: \"1\",\n        value: windowSize2,\n        onChange: handleInputChange2,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Plot\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this) : base && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: `data:image/png;base64,${base}`,\n      alt: \"plot\",\n      style: {\n        marginTop: \"20px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate(-1),\n      style: {\n        marginTop: \"20px\",\n        padding: \"10px 20px\",\n        cursor: \"pointer\"\n      },\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(Plot, \"n53ePOl5nOlcQKbCIpsEmFxlmm4=\", false, function () {\n  return [useNavigate];\n});\n_c = Plot;\nexport default Plot;\nvar _c;\n$RefreshReg$(_c, \"Plot\");","map":{"version":3,"names":["useEffect","useState","useNavigate","jsxDEV","_jsxDEV","Plot","_s","base","setBase","windowSize1","setWindowSize1","windowSize2","setWindowSize2","loading","setLoading","navigate","fetchImg","size1","size2","url","result","fetch","json","img","error","console","handleInputChange1","event","target","value","handleInputChange2","handleSubmit","preventDefault","style","display","justifyContent","alignItems","height","flexDirection","children","onSubmit","textAlign","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","name","min","onChange","required","src","alt","marginTop","onClick","padding","cursor","_c","$RefreshReg$"],"sources":["/home/kushal/Desktop/College_Stuff/Psychology/Journal-Sentiment-Analysis/client/src/Components/Plot.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction Plot() {\n  const [base, setBase] = useState();\n  const [windowSize1, setWindowSize1] = useState(3); // Default window size 1\n  const [windowSize2, setWindowSize2] = useState(5); // Default window size 2\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate(); // Initialize navigate hook\n\n  const fetchImg = async (size1, size2) => {\n    setLoading(true);\n    const url = `http://127.0.0.1:5000/plot?window_size1=${size1}&window_size2=${size2}`;\n    try {\n      let result = await fetch(url);\n      result = await result.json();\n      setBase(result.img);\n    } catch (error) {\n      console.error(\"Error fetching plot:\", error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch the plot when the component mounts with default window sizes\n  useEffect(() => {\n    fetchImg(windowSize1, windowSize2);\n  }, [windowSize1, windowSize2]);\n\n  // Handle input changes\n  const handleInputChange1 = (event) => {\n    setWindowSize1(event.target.value);\n  };\n\n  const handleInputChange2 = (event) => {\n    setWindowSize2(event.target.value);\n  };\n\n  // Handle form submission\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    fetchImg(windowSize1, windowSize2);\n  };\n\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"100vh\", flexDirection: \"column\" }}>\n      <form onSubmit={handleSubmit} style={{ textAlign: \"center\" }}>\n        <label htmlFor=\"window_size1\">Enter Moving Average Window Size 1:</label>\n        <input\n          type=\"number\"\n          id=\"window_size1\"\n          name=\"window_size1\"\n          min=\"1\"\n          value={windowSize1}\n          onChange={handleInputChange1}\n          required\n        />\n        <br />\n        <label htmlFor=\"window_size2\">Enter Moving Average Window Size 2:</label>\n        <input\n          type=\"number\"\n          id=\"window_size2\"\n          name=\"window_size2\"\n          min=\"1\"\n          value={windowSize2}\n          onChange={handleInputChange2}\n          required\n        />\n        <br />\n        <button type=\"submit\">Update Plot</button>\n      </form>\n\n      {loading ? (\n        <p>Loading...</p>\n      ) : (\n        base && <img src={`data:image/png;base64,${base}`} alt=\"plot\" style={{ marginTop: \"20px\" }} />\n      )}\n\n      <button\n        onClick={() => navigate(-1)}\n        style={{ marginTop: \"20px\", padding: \"10px 20px\", cursor: \"pointer\" }}\n      >\n        Go Back\n      </button>\n    </div>\n  );\n}\n\nexport default Plot;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}